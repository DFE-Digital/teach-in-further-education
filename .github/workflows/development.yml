name: "Development"

on:
  push:
    branches: [ development ]
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:


jobs:
  build:
    name: Build application
    runs-on: ubuntu-latest
    environment: Development
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Use ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.3

      - uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Installing gems
        run: |
          bundle config path vendor/bundle
          bundle install

      - name: Installing npm
        run: npm ci

      - name: Run Javascript build
        run: npm run build

      - name: Get latest content
        run: bundle exec middleman contentful
        env:
          GOOGLE_ANALYTICS_TAG: ${{ secrets.GOOGLE_ANALYTICS_TAG }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_DELIVERY_TOKEN: ${{ secrets.CONTENTFUL_DELIVERY_TOKEN }}
          CONTENTFUL_ENVIRONMENT: ${{ steps.migrate_contentful.outputs.environment_name }}

      - name: Run tests
        run: |
          MM_DATA_DIR=spec/data bundle exec rspec --pattern spec/features/*_spec.rb  --format RSpec::Github::Formatter  --format progress --format documentation --out ${{ github.workspace }}/out/site-features.txt

      - name: Save unit tests results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: unit_test_results
          path: ${{ github.workspace }}/out/site-*.txt

      - name: Building middleman site
        run: bundle exec middleman build --verbose
        env:
          GOOGLE_ANALYTICS_TAG: ${{ secrets.GOOGLE_ANALYTICS_TAG }}
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_DELIVERY_TOKEN: ${{ secrets.CONTENTFUL_DELIVERY_TOKEN }}
          CONTENTFUL_ENVIRONMENT: ${{ steps.migrate_contentful.outputs.environment_name }}

      - shell: bash
        run: |
          cp manifest-dev.yml build/manifest.yml
          cp Staticfile build/Staticfile
          cp Staticfile.auth build/Staticfile.auth

      - name: Deploy
        uses: ./.github/actions/cloudfoundry
        with:
            cf_api: ${{ secrets.GOVPAAS_API }}
            cf_username: ${{ secrets.GOVPAAS_USER }}
            cf_password: ${{ secrets.GOVPAAS_PASSWORD }}
            cf_org: ${{ secrets.GOVPAAS_ORG }}
            cf_space: ${{ secrets.GOVPAAS_SPACE }}
            working_dir: build
            command: push